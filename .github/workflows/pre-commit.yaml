name: pre-commit

on:
  workflow_dispatch:
  push:
    branches:
      - "master"
    paths:
      - ".github/workflows/pre-commit.yaml"
      - "pre_commit.js"
      - "common/version.sh"
  schedule:
    # daily on github default branch
    - cron: "0 0 15 */2 *"
  repository_dispatch:
    types:
      - pre-commit
jobs:
  main:
    strategy:
      fail-fast: false
      matrix:
        repo:
          - { repo: Trim21/BGmi, branch: master, py: "3.8" }
          - { repo: Trim21/pre-commit-hooks, branch: master, py: "3.8" }
          - { repo: Trim21/transmission-rpc, branch: master, py: "3.8" }
          - { repo: BGmi/BGmi-NG, branch: master }
          - { repo: BGmi/anime-episode-parser, branch: master, py: "3.8" }
          - { repo: "Trim21/flexget-plugins", branch: master, py: "3.8" }

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      ################ node

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - run: npm i npm -g

      - uses: actions/cache@v2
        id: cache
        with:
          path: ./node_modules
          key: npm-14-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      ################ end node

      ################ python

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.repo.py }}

      - name: Get Latest tools version
        id: get-version
        run: bash ./common/version.sh

      - uses: Trim21/setup-poetry@dist/v1

      - uses: actions/checkout@v2
        with:
          repository: ${{ matrix.repo.repo }}
          ref: ${{ matrix.repo.branch }}
          path: ${{ matrix.repo.repo }}
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

      - name: Fetch All Branches
        working-directory: ./${{ matrix.repo.repo }}
        run: git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*

      - uses: actions/cache@v2
        name: Cache Python Packages
        with:
          path: ~/.local
          key: poetry-${{ matrix.repo.repo }}-${{ env.PY }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: poetry-${{ matrix.repo.repo }}-${{ env.PY }}-

      - uses: actions/cache@v2
        name: Cache Pre-Commit
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ matrix.repo.repo }}-${{ env.PY }}-${{ hashFiles('**/.pre-commit-config.yaml') }}
          restore-keys: pre-commit-${{ matrix.repo.repo }}-${{ env.PY }}-

      - name: Install Dependencies
        working-directory: ./${{ matrix.repo.repo }}
        run: pip install --user --no-deps -r <(poetry export -f requirements.txt --dev)

      - name: check if pre-commit update
        run: node $GITHUB_WORKSPACE/pre_commit.js
        working-directory: ./${{ matrix.repo.repo }}
        env:
          PERSONAL_GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          REPO: ${{ matrix.repo.repo }}
          BRANCH: ${{ matrix.repo.branch }}
